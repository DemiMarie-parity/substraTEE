pipeline {
    agent none
    parameters {
        string(
            name: 'substrate_api_client_revision',
            defaultValue: 'HEAD',
            description: 'Revision or branch of substrate-api-client to use. Prepend b_ for branch name'
        )
    }
    options {
        timeout(time: 2, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '5'))
        timestamps()
    }
    stages {
        stage('Outside Docker') {
            agent {
                label 'linux'
            }
            steps {
                sh 'ls -la'
                echo sh(returnStdout: true, script: 'env')
            }
        }
        stage('Inside Docker') {
            agent {
                docker { image 'repository.scs-ad.scs.ch/substratee-docker-dev-local/substratee_generic:latest' }
            }
            steps {
                echo "Hello ${params.PERSON}"
                sh 'ls -la'
                echo sh(returnStdout: true, script: 'env')

                script {
                    if ( params.substrate_api_client_revision == "HEAD" ) {
                        echo "substrate_api_client_revision is HEAD: ${params.substrate_api_client_revision}"
                    } else {
                        echo "substrate_api_client_revision is not HEAD: ${params.substrate_api_client_revision}"
                    }

                    if ( params.substrate_api_client_revision.contains("b_")) {
                        echo "string contains b_"
                    }
                }
            }
        }
    }
}